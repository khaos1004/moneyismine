plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.jetbrains.kotlin.jvm' version '2.0.0' // Kotlin 플러그인 추가
	id 'org.jetbrains.kotlin.plugin.spring' version '2.0.0' // Spring 플러그인 추가
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.jetbrains.kotlin:kotlin-reflect' // Kotlin 반영성
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8' // Kotlin 표준 라이브러리
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0' //swagger
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
	kotlinOptions {
		jvmTarget = "21" // JVM 타겟 설정
	}
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', 'src/main/kotlin'] // Kotlin 소스 디렉토리 추가
		}
	}
	test {
		java {
			srcDirs = ['src/test/java', 'src/test/kotlin'] // 테스트 소스 디렉토리 추가
		}
	}
}

/* 없어도 돌아가는 부분// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(generated)
}

// java source set 에 querydsl QClass 위치 추가
sourceSets { main.java.srcDirs += "$projectDir/build/generated"}
*/

clean {
	delete file('src/main/generated')
}

tasks.named('test') {
	useJUnitPlatform()
}
